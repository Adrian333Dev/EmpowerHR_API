generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  org_id      Int     @default(autoincrement())
  name        String  @db.VarChar(100)
  description String? @db.Text

  // Relationships
  departments Department[]
  employees   Employee[]

  // Attributes
  @@id([org_id])
  @@unique([name])
  @@map(name: "organizations")
}

model Department {
  dept_id     Int     @default(autoincrement())
  name        String  @db.VarChar(100)
  description String? @db.Text

  // Relationships
  org_id       Int
  organization Organization @relation(fields: [org_id], references: [org_id])
  parent_id    Int?
  parent       Department?  @relation("ParentDepartment", fields: [parent_id], references: [dept_id])
  children     Department[] @relation("ParentDepartment")
  workers      Employee[]

  // Attributes
  @@id([dept_id])
  @@unique([name])
  @@map(name: "departments")
}

model User {
  user_id    Int    @default(autoincrement())
  first_name String @db.VarChar(50)
  last_name  String @db.VarChar(50)
  email      String @db.VarChar(100)
  password   String @db.VarChar(100)

  // Relationships
  employeeProfiles Employee[]

  // Attributes
  @@id([user_id])
  @@unique([email])
  @@map(name: "users")
}

enum EmployeeRole {
  ADMIN
  MANAGER
  EMPLOYEE
}

model Employee {
  emp_id    Int
  role      EmployeeRole
  bio       String?      @db.Text
  job_title String       @default("Employee") @db.VarChar(100)

  // Relationships
  user_id      Int
  user         User         @relation(fields: [user_id], references: [user_id])
  org_id       Int
  organization Organization @relation(fields: [org_id], references: [org_id])
  dept_id      Int
  department   Department   @relation(fields: [dept_id], references: [dept_id])

  // Attributes
  @@id([emp_id])
  @@unique([user_id, org_id, dept_id])
  @@map(name: "employees")
}
