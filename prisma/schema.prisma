// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  HR_MANAGER
  EMPLOYEE
}

model Employee {
  id                 Int                 @id @default(autoincrement())
  name               String
  email              String              @unique
  jobTitleId         Int
  departmentId       Int
  salary             Float
  hireDate           DateTime
  role               Role                @default(EMPLOYEE)
  jobTitle           JobTitle            @relation(fields: [jobTitleId], references: [id])
  department         Department          @relation(fields: [departmentId], references: [id])
  performanceReviews PerformanceReview[]
}

model Department {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  parentId  Int? // Optional self-relation to represent the parent department
  children  Department[] @relation("ParentChild")
  parent    Department?  @relation("ParentChild", fields: [parentId], references: [id])
  employees Employee[]
  jobTitles JobTitle[]
}

model JobTitle {
  id           Int        @id @default(autoincrement())
  title        String     @unique
  employees    Employee[]
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
}

model PerformanceReview {
  id         Int      @id @default(autoincrement())
  employeeId Int
  date       DateTime @default(now())
  rating     Int
  comments   String?
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}
