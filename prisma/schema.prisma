generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  orgId      Int     @default(autoincrement())
  name        String  @db.VarChar(100)
  description String? @db.Text

  // Relationships
  departments Department[]
  employees   Employee[]

  // Attributes
  @@id([orgId])
  @@unique([name])
  @@map(name: "organizations")
}

model Department {
  deptId     Int     @default(autoincrement())
  name        String  @db.VarChar(100)
  description String? @db.Text

  // Relationships
  orgId       Int
  organization Organization @relation(fields: [orgId], references: [orgId])
  parentId    Int?
  parent       Department?  @relation("ParentDepartment", fields: [parentId], references: [deptId])
  children     Department[] @relation("ParentDepartment")
  workers      Employee[]

  // Attributes
  @@id([deptId])
  @@unique([name])
  @@map(name: "departments")
}

model User {
  userId    Int    @default(autoincrement())
  firstName String @db.VarChar(50)
  lastName  String @db.VarChar(50)
  email      String @db.VarChar(100)
  password   String @db.VarChar(100)

  // Relationships
  employeeProfiles Employee[]

  // Attributes
  @@id([userId])
  @@unique([email])
  @@map(name: "users")
}

enum EmployeeRole {
  ADMIN
  MANAGER
  EMPLOYEE
}

model Employee {
  empId    Int          @default(autoincrement())
  role      EmployeeRole @default(EMPLOYEE)
  bio       String?      @db.Text
  jobTitle String       @default("Employee") @db.VarChar(100)

  // Relationships
  userId      Int
  user         User         @relation(fields: [userId], references: [userId])
  orgId       Int
  organization Organization @relation(fields: [orgId], references: [orgId])
  deptId      Int
  department   Department   @relation(fields: [deptId], references: [deptId])

  // Attributes
  @@id([empId])
  @@unique([userId, orgId, deptId])
  @@map(name: "employees")
}
